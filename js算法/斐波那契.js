// 斐波那契数列（Fibonacci sequence）
// 又称黄金分割数列、因数学家莱昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，
// 指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……在数学上，斐波那契数列以如下被以递推的方法定义：F(0)=0，F(1)=1, F(n)=F(n - 1)+F(n - 2)（n ≥ 3，n ∈ N*）
// 在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用，为此，美国数学会从 1963 年起出版了以《斐波纳契数列季刊》为名的一份数学杂志，用于专门刊载这方面的研究成果。

function fib(n){
    if(n < 2) {
        return n
    }
    return fib(n - 1) + fib(n - 2)
}

/* 
    显然这个函数不符合尾调用优化的条件，因为返回语句中有一个相加的操作。结果，fib(n)的栈帧数的内存复杂度是 O(2n)。
    解决这个问题也有不同的策略，比如把递归改写成迭代循环形式。不过，也可以保持递归实现，
    但将其重构为满足优化条件的形式。为此可以使用两个嵌套的函数，外部函数作为基础框架，内部函数执行递归
*/

function fib2(n){
    return fibTmp(0,1,n)
}

function fibTmp(a,b,n){
    if(n === 0){
        return a
    }
    return fibTmp(b,a + b,n - 1)
}

console.log(fib2(7))